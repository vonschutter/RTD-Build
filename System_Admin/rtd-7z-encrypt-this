#!/bin/bash
#
#::             			A D M I N   C O M M A N D L E T   
#::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::
#::::::::::::::::::::::::::::::::::::::// Simple Compression Tool //::::::::::::::::::::::::::::::::::// Linux //::::::::
#::
#:: Author:   	SLS  
#:: Version 	1.02
#::
#::
#::	Purpose: To compress all files and folders individually found in the current folder. 
#::		 The current folder refers to the present working directory "PWD". 
#::		 
#::     Usage:	Simply execute this commandlet to accomplish this task. No parameters required.
#:: 
#::     
#::     
#::
#::
#::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::
#::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::
#
#
# This  script was originally developed for RuntimeData, a small OEM in Buffalo Center, IA.
# This OEM and store nolonger exists as its owner has passed away.
# This script is shared in the hopes that someone will find it useful.
#
# This script is intended to live in the ~/bin/ or /bin/ folder, alternatively in the $PATH.
#
#
# Tutorial Text:
# find ./ -type f -iname "*.rar" -exec unrar e {} \;
# a                   Add (dir1 to archive.7z)
# -t7z                Use a 7z archive
# -m0=lzma2           Use lzma2 method
# -mx=9               Use the '9' level of compression = Ultra
# -mfb=64             Use number of fast bytes for LZMA = 64
# -md=32m             Use a dictionary size = 32 megabytes
# -ms=on              Solid archive = on
# -mhe=on             7z format only : enables or disables archive header encryption
# -p{Password}        Add a password
# Simple compression logic: 7za a -t7z $line.7z $line
# To change all filename to have whitespace replaced with _: list=`ls | sed -e 's/ /\\\\ /g'`
# Alternatively use: IFS=$(echo -en "\n\b") Here IFS is altered to not consider a whitespace as a separator.
# To see all options type "man 7z"
# or go to: https://www.mankier.com/1/7z#


###########################################################################
##                                                                       ##
##                       Set Environment                                 ##
##                                                                       ##
###########################################################################
#
DIR="$*"
source /opt/rtd/scripts/_rtd_library
 


###########################################################################
##                                                                       ##
##                       Script Executive                                ##
##                                                                       ##
###########################################################################
#
# And remember to handle or replace white spaces with underscore so the shell commands
# don't fail. Here IFS is altered to not consider a whitespace as a separator.

[ "$DIR" == "" ] && echo "Usage: rtd-7z-this [filename] [filename filename2] [*.ext]" ; exit 1

# Attempting to deal with filenemes with spaces in them... 
# Please excuse all the code for a relatively simple task.
OLDIFS=$IFS
IFS=$'\n'
fileArray=($(ls $@))
IFS=$OLDIFS
tLen=${#fileArray[@]}

clear
echo -e  "Hello $YELLOW $USER $ENDCOLOR ... I am going to compress $YELLOW $tLen $ENDCOLOR files: "
for (( i=0; i<${tLen}; i++ )); do echo -e $GREEN "${fileArray[$i]}        $ENDCOLOR"  ; done

echo  "To cancel this, just close the terminal or press [CRTL + C]."
read -p "Press the [ENTER] key to continue..."
echo -e "To encrypt the content you have to give me a phrase to encrypt it with. \n This can be anything in one long word, but never forget it!"
echo -e $YELLOW
read -sp 'Enter encryption phrase: ' passtoken
echo -e $ENDCOLOR
clear
echo -e "☕ Please be patient as lots of data may take time to compress..."

for (( i=0; i<${tLen}; i++ ));
do
	7z a -t7z -m0=lzma2 -mx=9 -mfb=64 -md=64m -ms=on -mhe=on -p$passtoken "${fileArray[$i]}".7z "${fileArray[$i]}"
done
unset passtoken

echo "Created the following archive(s) UN-encrypted:"
echo " FILENAME         STATUS"
for (( i=0; i<${tLen}; i++ )); do
	[[ -e "${fileArray[$i]}".7z ]] && echo -e "$GREEN Confirmed     $ENDCOLOR: $YELLOW "${fileArray[$i]}".7z $ENDCOLOR" || echo -e "$RED Failed!    $ENDCOLOR: $YELLOW "${fileArray[$i]}".7z $ENDCOLOR"
done
echo "Please review the output above to review all the progress ⏫"
