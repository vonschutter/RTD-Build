#!/bin/bash
#
#::            S O F T W A R E    R E C I P I E S 
#::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::
#::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::
#:: Author:   	Stephan S.  Buffalo Center, IA
#:: Version 1.01
#::
#::
#::	Purpose: To define how software is added in one place. 
#::		 Software may be downloaded and installed manually, or via package manager or snaps. 
#::		 Configuration items are also defined here. 
#::     Usage: call this file using the "source" statment in bash. Then simply invoke the relevan recipie (funclion)
#:: 
#::     This script is shared in the hopes that
#::     someone will find it usefull.
#::
#::
#::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::
#::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::
#the_ppa=...  # set appropriately
#
#if ! grep -q "^deb .*$the_ppa" /etc/apt/sources.list /etc/apt/sources.list.d/*; then
#    # commands to add the ppa ...
#fi
#
#
#
# Add several software items that are almost alwasys used 
# in one way or another... 




function recipie_baseapps (){
		# Add several software items that are almost alwasys used 
		# in one way or another... 
			echo -e $YELLOW"--- Adding some minor congiguration items for productivity..." $ENDCOLOR
			for i in wine diodon gnome-twitch polari filezilla libdvdcss2 ffmpeg
			do
			     InstallSoftwareFromRepo $i
			done

			# some small simple apps you will like... 
			check_dependencies snapd
			# Feature rich screenshot tool and screenshot annotation tool. Great for support.
			snap install screencloud  2>>$_ERRLOGFILE
			snap install flameshot-app 2>>$_ERRLOGFILE
			# A small app that allows you to use your old DOS software. 
			snap install dosbox-x  2>>$_ERRLOGFILE
			# A simple to use not taking app that auto syncs with the same app on any device.
			snap install simplenote 2>>$_ERRLOGFILE
			# Configure the system look an feel to be crisp and clean
			recipie_OEM_config
}



function recipie_wps_office () {
			# Download and install WPS Office (more like Microsoft Office) OSS from China... 
			dl http://kdl.cc.ksosoft.com/wps-community/download/8722/wps-office_11.1.0.8722_amd64.deb wps-office_11.1.0.8722_amd64.deb
}



function recepie_oem_restricted_fonts () {
			# Download and install Trutype font pack... these are propietary and require passphrase to unlock. 
			wget -q --show-progress "https://www.dropbox.com/s/7n5dgltnddtrs9j/True_Type_Font_Pack.7z" -P /opt/rtd/cache/
			mkdir -p /usr/share/fonts/truetype/oem
			check_dependencies p7zip-full
			7z e -y /opt/rtd/cache/True_Type_Font_Pack.7z -o/usr/share/fonts/truetype/oem/

}



function recipie_secure_communication () {
			check_dependencies snapd
			snap install signal-desktop 2>>$_ERRLOGFILE
			snap install telegram-desktop 2>>$_ERRLOGFILE


}



function recipie_video_editing () {
			check_dependencies snapd
			snap install vidcutter 2>>$_ERRLOGFILE 
			recipie_openshot

}



function recipie_lamp_software (){
			echo -e $YELLOW"--- Adding Developer Software: LAMP Stack..." $ENDCOLOR
			for i in apache2 mysql-server php libapache2-mod-php php-mcrypt php-mysql \
				phpmyadmin nodejs
			do
			     InstallSoftwareFromRepo $i
			done
			echo "Cofiguring apache to run Phpmyadmin"
			echo "Include /etc/phpmyadmin/apache.conf" >> /etc/apache2/apache2.conf
			a2enmod rewrite
			service apache2 restart
}



function recipie_developer_software (){
			echo -e $YELLOW"--- Adding Developer Software Apps: IDE Tools and Compilers..." $ENDCOLOR
			for i in build-essential git
			do
			     InstallSoftwareFromRepo $i
			done
			check_dependencies snapd
			snap install atom --classic  2>>$_ERRLOGFILE
			snap install gitkraken 2>>$_ERRLOGFILE
}



function recipie_compression_tools (){
			echo -e $YELLOW"--- Adding Comression Toolset (zip, 7zip rar etc.)..." $ENDCOLOR	
			for i in p7zip-full p7zip-rar rar zip 

			do
			     InstallSoftwareFromRepo $i
			done
}



function recipie_games (){
			# Install games from native repositories... 
			echo -e $YELLOW"--- Adding Selection of Quality Games..." $ENDCOLOR
			for i in dreamchess supertuxkart 0ad armagetronad \
				 warzone2100 mesa-utils openarena assaultcube marsshooter
			do
			     InstallSoftwareFromRepo $i
			done

			# Install additional quality games from Flathub
			check_dependencies flatpak
			flatpak install flathub com.moddb.TotalChaos -y	--noninteractive
			flatpak install flathub com.viewizard.AstroMenace -y --noninteractive
			flatpak install flathub io.github.EndlessSky.endless-sky -y --noninteractive
			flatpak install flathub com.albiononline.AlbionOnline -y --noninteractive
			flatpak install flathub com.endlessnetwork.aqueducts -y --noninteractive
			flatpak install flathub de.billardgl.Billardgl -y --noninteractive
			flatpak install flathub org.naev.Naev -y --noninteractive

}



function recipie_steam () {
			# Install Valves Steam Client for gaming. 
			dl https://steamcdn-a.akamaihd.net/client/installer/steam.deb steam.deb

}


function recipie_admin_tools (){
			echo -e $YELLOW"--- OEM System Administrative Tools..." $ENDCOLOR
			# Loop through each item in this list of software and perform an install 
			# using the relevant packaging system. 
			for i in terminix nmap synaptic ssh gparted sshfs htop iftop nethogs vnstat ifstat dstat nload glances bmon \
				vim vim-scripts gufw variety remmina remmina-plugin-exec remmina-plugin-secret remmina-plugin-vnc remmina-plugin-nx  \
				remmina-plugin-spice remmina-plugin-xdmcp remmina-plugin-rdp remmina-plugin-telepathy  

			do
			     InstallSoftwareFromRepo $i
			done

}



function recipie_java (){
			# Special case for installing Oracle Java...
			echo -e $YELLOW"--- Adding Oracle Java..." $ENDCOLOR
	        	# Add the Oracle Java repository and install the software. 
    	    		add-apt-repository ppa:linuxuprising/java -y  1>>$_LOGFILE 2>>$_ERRLOGFILE
     	   		apt-get update  1>>$_LOGFILE 2>>$_ERRLOGFILE
    	    		echo oracle-java11-installer shared/accepted-oracle-license-v1-2 select true | sudo /usr/bin/debconf-set-selections && \
    	    		apt install -y oracle-java11-installer && \
   	     		apt install -y oracle-java11-set-default  1>>$_LOGFILE 2>>$_ERRLOGFILE
}



function recipie_bleachbit (){
			#Bleachbit
			echo -e $YELLOW"--- Bleachbit System Cleaning Tool..." $ENDCOLOR
			InstallSoftwareFromRepo bleachbit 
}



function recipie_codecs (){
			echo -e $YELLOW"--- Install all the required multimedia codecs..." $ENDCOLOR
			# Auto accept microsoft corefonts eula
			echo ttf-mscorefonts-installer msttcorefonts/accepted-mscorefonts-eula select true | /usr/bin/debconf-set-selections
			InstallSoftwareFromRepo ubuntu-restricted-extras
}



function recipie_vlc (){
			#VLC Media Player
			echo -e $YELLOW"--- Installing VLC Media Player..." $ENDCOLOR
			InstallSoftwareFromRepo vlc
}



function recipie_google_chrome (){
			# Special case for installing Google Chrome
			echo -e $YELLOW"--- Installing Google Chrome Browser from google directly..." $ENDCOLOR
			dl https://dl.google.com/linux/direct/google-chrome-stable_current_amd64.deb google-chrome-stable_current_amd64.deb 1>>$_LOGFILE 2>>$_ERRLOGFILE
}



function recipie_teamviewer (){
			#Teamviewer
			echo -e $YELLOW"--- Installing Teamviewer..." $ENDCOLOR
			dl https://download.teamviewer.com/download/linux/teamviewer_amd64.deb teamviewer_amd64.deb 1>>$_LOGFILE 2>>$_ERRLOGFILE
}



function recipie_anydesk () {
			check_dependencies flatpak
			flatpak install flathub com.anydesk.Anydesk 

}



function recipie_skype (){
			#Skype for Linux
			echo -e $YELLOW"--- Installing Skype For Linux..." $ENDCOLOR
			check_dependencies snapd
			snap install skype --classic  2>>$_ERRLOGFILE
}



function recipie_viber (){
			check_dependencies snapd
			snap install --edge viber-mtd 
}



function recipie_mega.nz (){
			# Special case for installing MEGA nz file sync utility (better than Drop Box)...
			echo -e $YELLOW"--- Installing MEGA nz file crypto sync utility..." $ENDCOLOR
			FILE2GET="megasync-xUbuntu_`lsb_release -sr`_amd64.deb"
			URL="https://mega.nz/linux/MEGAsync/xUbuntu_`lsb_release -sr`/amd64/$FILE2GET"
			dl $URL $FILE2GET 1>>$_LOGFILE 2>>$_ERRLOGFILE
}



function recipie_dropbox (){
			# Install Dropbox
			echo -e $YELLOW"--- Installing Dropbox Cloud Storage Sync..." $ENDCOLOR
			InstallSoftwareFromRepo nautilus-dropbox
}



function recipie_openshot (){
			# Special case for installing Openshot video editor
			echo -e $YELLOW"--- Installing Openshot video editor..." $ENDCOLOR
			add-apt-repository -y ppa:openshot.developers/ppa 1>>$_LOGFILE 2>>$_ERRLOGFILE
			apt-get update 1>>$_LOGFILE 2>>$_ERRLOGFILE
			apt-get -y -qq --allow-change-held-packages --ignore-missing install openshot openshot-doc 1>>$_LOGFILE 2>>$_ERRLOGFILE

}



function recipie_media_streamers (){
			echo -e $YELLOW"--- Installing Music Players and Audio Software..." $ENDCOLOR
			check_dependencies snapd
			snap install spotify  2>>$_ERRLOGFILE
			snap install google-play-music-desktop-player  2>>$_ERRLOGFILE
			snap install winds 2>>$_ERRLOGFILE

}



function recipie_audio_tools (){
			check_dependencies snapd
			snap install picard  2>>$_ERRLOGFILE
}



function recipie_virtualbox (){
			# Special case for installing VirtualBox
			echo -e $YELLOW"--- Installing VirtualBox if available..." $ENDCOLOR
			echo virtualbox virtualbox/module-compilation-allowed boolean true | /usr/bin/debconf-set-selections
			echo virtualbox virtualbox/delete-old-modules boolean true | /usr/bin/debconf-set-selections
			# Loop through each item in this list of softwar and perform an install 
			# using the relevant packaging system. 
			for i in virtualbox virtualbox-dkms virtualbox-ext-pack virtualbox-guest-additions-iso 
			do
			     InstallSoftwareFromRepo $i
			done	
			# Ensure that the current user can use USB etc... 			
			if id -nG "$SUDO_USER" | grep -qw "vboxusers"; then
			    echo      $SUDO_USER already belongs to vboxusers group
			else
			    usermod -G vboxusers -a $SUDO_USER 1>>$_LOGFILE 2>>$_ERRLOGFILE
			fi
}



function recipie_OEM_config (){
			echo "Applying OEM Configuration..."
			#::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::
			#::::::::::::::                                          ::::::::::::::::::::::
			#::::::::::::::          Desktop Settings                ::::::::::::::::::::::
			#::::::::::::::                                          ::::::::::::::::::::::
			#::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::
			enable_firewall
			# Power managment profile
			InstallSoftwareFromRepo tuned
			sudo systemctl enable --now tuned
			sudo tuned-adm profile balanced
			#Performance:
			#sudo tuned-adm profile desktop
			#Virtual Machine Host:
			#sudo tuned-adm profile virtual-host
			#Virtual Machine Guest:
			#sudo tuned-adm profile virtual-guest
			#Battery Saving:
			#sudo tuned-adm profile powersave
			# Virtual Machines
			# sudo systemctl enable --now libvirtd
			# Management of local/remote system(s) - availa

			# Apply tweaks to the UI based on desktop active
			#if  echo $_UI |grep -i -q "gnome"; then
				echo "Fonud the gnome UI on this system! Adding some customizations..."
				# Add wallpapers and set GNOME wallpaper... 
				recipie_set_gnome_wallpaper
				# Add the gnome UI tweak tool... 
				InstallSoftwareFromRepo gnome-tweak-tool
				# Add Some clean and basic themes and icons...			
				for i in numix-blue-gtk-theme numix-gtk-theme numix-icon-theme numix-icon-theme-circle numix-icon-theme-square	\
							gnome-shell-extension-appindicator \
							gnome-shell-extension-suspend-button \
							gnome-shell-extension-log-out-button  \
							gnome-shell-extension-tilix-dropdown \
							gnome-shell-extension-multi-monitors \
							gnome-shell-extension-caffeine \
							gnome-shell-extension-gsconnect  \
							gnome-shell-extension-gsconnect-browsers \
							gnome-shell-extension-dash-to-panel \
							gnome-shell-extension-dashtodock \
							arc-theme \
							adwaita-icon-theme-full adwaita-qt  
				do 
					InstallSoftwareFromRepo $i
				done
				#Change user context and apply gnome settings... 
				
				echo "Modifying setings for: $SUDO_USER"
				recipie_tweak_user_gnome_ui
				# dl http://packages.linuxmint.com/pool/main/m/mint-y-icons/mint-y-icons_1.3.3_all.deb mint-y-icons_1.3.3_all.deb
				# Transfer settings for all users... 
				# cp -r /home/$SUDO_USER/.gnome* .config .local /etc/skel/
			#fi

			if echo $_UI | grep -i -q "kde"; then
				echo "Detected KDE UI!" 	
			
			fi
}



function recipie_tweak_user_gnome_ui (){
			# Configure Gnome for OEM look and feel. This is completely as desired. 
			# These setings will then be copied to the "/etsc/skel" directory where user templates
			# are stored. This will allow new users to get the same themes and settings as the 
			# current user. This should likely only be done right after a PC has been installed
			# otherwise all user configuration settings will be trasferred to any user 
			# subsequently created.  
			# Special case for installing Google Chrome
			echo -e $YELLOW"--- Optimizig look and feel of the desktop for productivity and aestetics..." $ENDCOLOR
			run-in-user-session () {
				echo -------------------------------------
				echo "$@"
				sudo -H -u $SUDO_USER DISPLAY=:0 DBUS_SESSION_BUS_ADDRESS=unix:path=/run/user/$(id -u "$SUDO_USER")/bus $@ > /dev/null 2>&1
				echo -------------------------------------
			}

			cat <<EOF > gtweak.sh
			#!/bin/bash
			# Terminal and Tilix Dark Theme
			 gsettings set com.gexperts.Tilix.Settings theme-variant 'dark'
			 gsettings set org.gnome.Terminal.Legacy.Settings theme-variant 'dark'

			 gsettings set org.gnome.Terminal.Legacy.Profile:/ use-transparent-background true
			 gsettings set org.gnome.Terminal.Legacy.Profile:/ background-transparency-percent 50
			 gsettings set org.gnome.Terminal.Legacy.Profile:/ background-color '#FFFFFF'
			 gsettings set org.gnome.Terminal.Legacy.Profile:/ highlight-background-color '#000000'
			 gsettings set org.gnome.Terminal.Legacy.Profile:/ default-size-columns 100
			 gsettings set org.gnome.Terminal.Legacy.Profile:/ use-theme-transparency false
			 gsettings set org.gnome.Terminal.Legacy.Profile:/ scrollback-lines 10000


			# Gnome Shell Theming
			# Add proffessional and crisp looking UI...
			 gsettings set org.gnome.desktop.interface gtk-theme 'Arc-Darker'
			 gsettings set org.gnome.desktop.interface icon-theme 'Adwaita'

			# Set font
			# gsettings set org.gnome.desktop.interface monospace-font-name 'Source Code Pro Semi-Bold 12'

			#Set Extensions for gnome
			 gsettings set org.gnome.shell disable-user-extensions false
			 gsettings set org.gnome.shell enabled-extensions "['user-theme@gnome-shell-extensions.gcampax.github.com', 'TopIcons@phocean.net', 'dash-to-dock@micxgx.gmail.com']"

			#Better Font Smoothing
			 gsettings set org.gnome.settings-daemon.plugins.xsettings antialiasing 'rgba'

			#Usability Improvements
			 gsettings set org.gnome.desktop.peripherals.mouse accel-profile 'adaptive'
			 gsettings set org.gnome.desktop.sound allow-volume-above-100-percent true
			 gsettings set org.gnome.desktop.calendar show-weekdate true
			 gsettings set org.gnome.desktop.wm.preferences resize-with-right-button true
			 gsettings set org.gnome.desktop.wm.preferences button-layout 'appmenu:minimize,maximize,close'
			 gsettings set org.gnome.shell.overrides workspaces-only-on-primary false

			# Configure Dash to Dock
			 gsettings set org.gnome.shell.extensions.dash-to-dock click-action 'minimize'
			 gsettings set org.gnome.shell.extensions.dash-to-dock dock-position 'BOTTOM'
			 gsettings set org.gnome.shell.extensions.dash-to-dock apply-custom-theme false
			 gsettings set org.gnome.shell.extensions.dash-to-dock custom-background-color false
			 gsettings set org.gnome.shell.extensions.dash-to-dock custom-theme-customize-running-dots true
			 gsettings set org.gnome.shell.extensions.dash-to-dock custom-theme-running-dots-color '#729fcf'
			 gsettings set org.gnome.shell.extensions.dash-to-dock custom-theme-shrink true
			 gsettings set org.gnome.shell.extensions.dash-to-dock dock-fixed false
			 gsettings set org.gnome.shell.extensions.dash-to-dock extend-height true
			 gsettings set org.gnome.shell.extensions.dash-to-dock force-straight-corner false
			 gsettings set org.gnome.shell.extensions.dash-to-dock icon-size-fixed true
			 gsettings set org.gnome.shell.extensions.dash-to-dock intellihide-mode 'ALL_WINDOWS'
			 gsettings set org.gnome.shell.extensions.dash-to-dock isolate-workspaces true
			 gsettings set org.gnome.shell.extensions.dash-to-dock show-apps-at-top true
			 gsettings set org.gnome.shell.extensions.dash-to-dock unity-backlit-items false
			 gsettings set org.gnome.shell.extensions.dash-to-dock transparency-mode 'FIXED'
			 gsettings set org.gnome.shell.extensions.dash-to-dock running-indicator-style 'SEGMENTED'
			 gsettings set org.gnome.shell.extensions.dash-to-dock background-opacity 0.70000000000000000
			 gsettings set org.gnome.shell.extensions.dash-to-dock extend-height false
			 gnome-shell-extension-tool -e dash-to-dock


			#This indexer is nice, but can be detrimental for laptop users battery life
			 gsettings set org.freedesktop.Tracker.Miner.Files index-on-battery false
			 gsettings set org.freedesktop.Tracker.Miner.Files index-on-battery-first-time false
			 gsettings set org.freedesktop.Tracker.Miner.Files throttle 15

			#Nautilus (File Manager) Usability
			 gsettings set org.gnome.nautilus.icon-view default-zoom-level 'standard'
			 gsettings set org.gnome.nautilus.preferences executable-text-activation 'ask'
			 gsettings set org.gtk.Settings.FileChooser sort-directories-first true
			 gsettings set org.gnome.nautilus.list-view use-tree-view true
			 gsettings set org.gnome.nautilus.list-view default-zoom-level 'small'

			# Set the GNOME Shell Apps Dashboard sort app in categories based on the FreeDesktop standard.
			 gsettings set org.gnome.desktop.app-folders folder-children "['accessories', 'chrome-apps', 'games', 'graphics', 'internet', 'office', 'programming', 'science', 'sound---video', 'system-tools', 'universal-access', 'wine']"
			 gsettings set org.gnome.desktop.app-folders.folder:/org/gnome/desktop/app-folders/folders/accessories/ name "Accessories"
			 gsettings set org.gnome.desktop.app-folders.folder:/org/gnome/desktop/app-folders/folders/accessories/ categories "['Utility']"
			 gsettings set org.gnome.desktop.app-folders.folder:/org/gnome/desktop/app-folders/folders/chrome-apps/ name "Chrome Apps"
			 gsettings set org.gnome.desktop.app-folders.folder:/org/gnome/desktop/app-folders/folders/chrome-apps/ categories "['chrome-apps']"
			 gsettings set org.gnome.desktop.app-folders.folder:/org/gnome/desktop/app-folders/folders/games/ name "Games"
			 gsettings set org.gnome.desktop.app-folders.folder:/org/gnome/desktop/app-folders/folders/games/ categories "['Game']"
			 gsettings set org.gnome.desktop.app-folders.folder:/org/gnome/desktop/app-folders/folders/graphics/ name "Graphics"
			 gsettings set org.gnome.desktop.app-folders.folder:/org/gnome/desktop/app-folders/folders/graphics/ categories "['Graphics']"
			 gsettings set org.gnome.desktop.app-folders.folder:/org/gnome/desktop/app-folders/folders/internet/ name "Internet"
			 gsettings set org.gnome.desktop.app-folders.folder:/org/gnome/desktop/app-folders/folders/internet/ categories "['Network', 'WebBrowser', 'Email']"
			 gsettings set org.gnome.desktop.app-folders.folder:/org/gnome/desktop/app-folders/folders/office/ name "Office"
			 gsettings set org.gnome.desktop.app-folders.folder:/org/gnome/desktop/app-folders/folders/office/ categories "['Office']"
			 gsettings set org.gnome.desktop.app-folders.folder:/org/gnome/desktop/app-folders/folders/programming/ name "Programming"
			 gsettings set org.gnome.desktop.app-folders.folder:/org/gnome/desktop/app-folders/folders/programming/ categories "['Development']"
			 gsettings set org.gnome.desktop.app-folders.folder:/org/gnome/desktop/app-folders/folders/science/ name "Science"
			 gsettings set org.gnome.desktop.app-folders.folder:/org/gnome/desktop/app-folders/folders/science/ categories "['Science']"
			 gsettings set org.gnome.desktop.app-folders.folder:/org/gnome/desktop/app-folders/folders/sound---video/ name "Sound & Video"
			 gsettings set org.gnome.desktop.app-folders.folder:/org/gnome/desktop/app-folders/folders/sound---video/ categories "['AudioVideo', 'Audio', 'Video']"
			 gsettings set org.gnome.desktop.app-folders.folder:/org/gnome/desktop/app-folders/folders/system-tools/ name "System Tools"
			 gsettings set org.gnome.desktop.app-folders.folder:/org/gnome/desktop/app-folders/folders/system-tools/ categories "['System', 'Settings']"
			 gsettings set org.gnome.desktop.app-folders.folder:/org/gnome/desktop/app-folders/folders/universal-access/ name "Universal Access"
			 gsettings set org.gnome.desktop.app-folders.folder:/org/gnome/desktop/app-folders/folders/universal-access/ categories "['Accessibility']"
			 gsettings set org.gnome.desktop.app-folders.folder:/org/gnome/desktop/app-folders/folders/wine/ name "Wine"
			 gsettings set org.gnome.desktop.app-folders.folder:/org/gnome/desktop/app-folders/folders/wine/ categories "['Wine', 'X-Wine', 'Wine-Programs-Accessories']"
EOF

run-in-user-session /bin/bash gtweak.sh 


}



function recipie_set_gnome_wallpaper (){
			# Install Wallpapers and configure Gnome to see them. ...
			RTDCP=/opt/rtd/cache
			echo Downloading Wallpapers:
			echo ---------------------------------------------
			mkdir -p $RTDCP && wget -q --show-progress https://github.com/vonschutter/RTD-Media/archive/master.zip -P $RTDCP && unzip -q -o $RTDCP/master.zip -d $RTDCP
			rm $RTDCP/master.zip
			pushd $RTDCP && mv -f RTD-Media-master/Wallpaper .. && mv -f RTD-Media-master/Sound .. 
			echo ---------------------------------------------
			mkdir -p /usr/local/share/gnome-background-properties
			DIRECTORY=/opt/rtd/Wallpaper/
			ls $DIRECTORY > lspictures.txt

			# Make a header
			echo "<?xml version=\"1.0\" encoding=\"UTF-8\"?>
			<!DOCTYPE wallpapers SYSTEM \"gnome-wp-list.dtd\">
			<wallpapers>" > mybackgrounds.xml
			# Registering all pictures in $DIRECTORY

				for i in $DIRECTORY*.jpg $DIRECTORY*.png; do
				echo "<wallpaper>
				<name>$i</name>
				<filename>$i</filename>
				  <options>stretched</options>
				    <pcolor>#8f4a1c</pcolor>
				    <scolor>#8f4a1c</scolor>
				    <shade_type>solid</shade_type>
				  </wallpaper>" >> mybackgrounds.xml
				done

			# creating the footer
				echo "</wallpapers>" >> mybackgrounds.xml
				sed 's/<name>\/usr\/share\/backgrounds\//<name>/g' mybackgrounds.xml > /usr/local/share/gnome-background-properties/mybackgrounds.xml
				# cp /usr/local/share/gnome-background-properties/mybackgrounds.xml /usr/share/gnome-background-properties/mybackgrounds.xml
				rm mybackgrounds.xml
				rm lspictures.txt
			# Set the default wallpaper... 
				run-in-user-session gsettings set org.gnome.desktop.background picture-uri file:///opt/rtd/Wallpaper/Wayland.jpg


}
